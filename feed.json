{
    "version": "https://jsonfeed.org/version/1",
    "title": "DinhCongMinh",
    "description": "",
    "home_page_url": "https://dinhminh4424.github.io/MinhDinhBlog",
    "feed_url": "https://dinhminh4424.github.io/MinhDinhBlog/feed.json",
    "user_comment": "",
    "author": {
        "name": "Đinh Công Minh"
    },
    "items": [
        {
            "id": "https://dinhminh4424.github.io/MinhDinhBlog/bien.html",
            "url": "https://dinhminh4424.github.io/MinhDinhBlog/bien.html",
            "title": "Biến",
            "summary": " Biến (variable) là nơi lưu trữ dữ liệu trong bộ nhớ để có thể sử dụng lại sau này. Vd: như hộp chứa giá trị số, chữ, mảng, đối tượng,… \"use strict\"; height = 180; // -&gt; Uncaught ReferenceError: height is not defined console.log(height); =&gt; giúp&hellip;",
            "content_html": "<p><strong> </strong><strong>Biến (variable)</strong> là nơi lưu trữ dữ liệu trong bộ nhớ để có thể sử dụng lại sau này.</p>\n<p>Vd: như hộp chứa giá trị số, chữ, mảng, đối tượng,…</p>\n<ul>\n<li>Đặt tên biến:\n<ul>\n<li>Khái quat:</li>\n</ul>\n</li>\n<li>tên biến có thể bao gồm bất kỳ chuỗi ký tự nào (chữ thường và chữ hoa), và kí tự  _,  $.\n<ul>\n<li>vd: abc, Bcd, a_g, …</li>\n</ul>\n</li>\n<li>Có phân biệt chữ hoa, thường\n<ul>\n<li>Vd : abc != Abc</li>\n</ul>\n</li>\n<li>Không được bắt đầu bằng số\n<ul>\n<li>vd: 1ab, 9cd =&gt;  là sai</li>\n</ul>\n</li>\n<li>Không được trùng từ khoá: if, else, for, class, …..</li>\n<li>Khai báo:</li>\n<li>Dùng 3 từ khoá: var, let, const</li>\n<li>Đứng trước tên biến khi khai báo.</li>\n<li>Vd:\n<ul>\n<li>let a ;</li>\n<li>let b ;</li>\n<li>const c = 10 ;</li>\n</ul>\n</li>\n<li>Khởi tạo:</li>\n<li>Gán toán tử `=` cho tên biến khi khai báo</li>\n<li>Có thể gán cho 1 giá trị cụ thể, nội dung của 1 biến khác, 1 giá trị của 1 hàm</li>\n<li>Vd:\n<ul>\n<li>let a = 10; // gán cụ thể</li>\n<li>a = 20;</li>\n<li>let c = a; // gán nd của biến khác</li>\n<li>Let d = (a,c) =&gt; a+c; // gán giá trị của 1 hàm</li>\n</ul>\n</li>\n<li>Khai báo và chế độ nghiêm ngặt <code>use strict</code></li>\n<li>Nếu không khai báo mà tự động gán biến  =&gt; không sai nhưng không nên</li>\n<li>Sử dụng <em><i><code>use strict;</code></i></em>; ở đầu đoạn mã</li>\n</ul>\n<table>\n<tbody>\n<tr>\n<td width=\"710\">\n<p>\"use  strict\";</p>\n<p>   </p>\n<p>height  =  180;  //  -&gt;  Uncaught  ReferenceError:  height  is  not  defined</p>\n<p>console.log(height);</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<p>=&gt; giúp thông dịch chuẩn js hiện đại (cái không đặt let, var, const của kiểu cũ )</p>\n<p> </p>\n<ul>\n<li>Thay đổi giá trị biến</li>\n</ul>\n<p> </p>\n<ul>\n<li>Ví dụ 1:</li>\n</ul>\n<table style=\"width: 99.7151%; height: 359px;\">\n<tbody>\n<tr style=\"height: 356.15px;\">\n<td style=\"width: 100%; height: 356.15px;\" width=\"710\">\n<p>let a = 100; // biến a có giá trị 100 (ban đầu)</p>\n<p>// thay đổi giá trị biến</p>\n<p>a = 199; // giá trị biến đã thay đổi (lúc sau)</p>\n</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Trong js sẽ ko có kiểu xác định, khác với c,c++,c#, java (vd: int a = 10; =&gt; kiểu số nguyên hay float b = 9.9; =&gt; kiểu số thực, …. )</li>\n<li>Ví dụ 2:</li>\n</ul>\n<table>\n<tbody>\n<tr>\n<td width=\"710\">\n<p>let a = 10; // kiểu số</p>\n<p>a = “Đinh Công Minh”; // kiểu chuỗi</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<p>=&gt; Trong js linh hoạt kiểu dữ liệu!</p>\n<ul>\n<li>Var, let</li>\n<li>Let:</li>\n<li>Biến đã khai báo rồi ko khai báo nữa</li>\n<li>Phạm vi: Biến khai báo trong<em><i>cục bộ</i></em> sẽ chỉ có phạm vi hoạt động trong cục bộ không có đến <em><i>toàn cục</i></em></li>\n</ul>\n<p> </p>\n<pre class=\"language-javascript\"><code>let  height  =  180;\n\nif(true){\n\n         let  weight  =  70;\n\n         console.log(height);  //  -&gt;  180\n\n         console.log(weight);  //  -&gt;  70\n\n}\n\nconsole.log(height);  //  -&gt;  180\n\nconsole.log(weight);  //  -&gt;  Uncaught  ReferenceError:  weight  is  not  defined</code></pre>\n<pre class=\"language-javascript\"><code>let a;\n\nconsole.log(a); //  -&gt;  undefined\n\nif (true) {\n\n  let a = 1;\n\n  console.log(a); //  -&gt;  1\n\n}\n\na = a + 1;\n\nconsole.log(a); //  -&gt;  undefined</code></pre>\n<ul>\n<li>Var;</li>\n<li>Biến đã khai báo có thể khai báo lại</li>\n</ul>\n<table>\n<tbody>\n<tr>\n<td width=\"710\">\n<p>Var a =10 ;</p>\n<p>Var a =20;</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<ul>\n<li>Phạm vi: Biến khai báo trong<em><i>cục bộ</i></em> không chỉ có phạm vi hoạt động trong cục bộ mà còn đến <em><i>toàn cục. </i></em>Cơ bản là:<u> biến cục bộ thay đổi =&gt; toàn cục cũng thay đổi</u></li>\n</ul>\n<table>\n<tbody>\n<tr>\n<td width=\"710\">\n<p>var  height  =  180;</p>\n<p>if(true){</p>\n<p>         var  weight  =  70;</p>\n<p>         console.log(height);  //  -&gt;  180</p>\n<p>         console.log(weight);  //  -&gt;  70</p>\n<p>}</p>\n<p>console.log(height);  //  -&gt;  180</p>\n<p>console.log(weight);  //  -&gt;  70</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<table>\n<tbody>\n<tr>\n<td width=\"710\">\n<p> var a;</p>\n<p>console.log(a); //  -&gt;  undefined</p>\n<p>if (true) {</p>\n<p>  let a = 1;</p>\n<p>  console.log(a); //  -&gt;  1</p>\n<p>}</p>\n<p>a = a + 1;</p>\n<p>console.log(a); //  -&gt;  undefined</p>\n</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<ul>\n<li>Hằng số:</li>\n<li>Là giá trị khi khai báo rồi sẽ không chỉnh sửa được nữa</li>\n</ul>\n</li>\n</ul>\n<table>\n<tbody>\n<tr>\n<td width=\"710\">\n<p>const  greeting  =  \"Hello!\";</p>\n<p>greeting  =  \"Hi!\";  //  -&gt;  Uncaught  TypeError:  Assignment  to  constant  variable.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<ul>\n<li>Phải gán gt lúc khời tạo luôn, nếu ko sẽ lỗi</li>\n</ul>\n<table>\n<tbody>\n<tr>\n<td width=\"710\">\n<p>const  greeting  =  \"Hello!\";</p>\n<p> </p>\n</td>\n</tr>\n<tr>\n<td width=\"710\">\n<p>const  greeting;  //  -&gt;  Uncaught  SyntaxError:  Missing  initializer  in  const  declaration</p>\n<p>greeting  =  \"Hello!\";</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<ul>\n<li>Phạm Vi: giống như let khai báo trong cụ bộ chỉ sd trong cục bộ</li>\n</ul>\n<p> </p>\n<p> </p>\n<p> </p>",
            "image": "https://dinhminh4424.github.io/MinhDinhBlog/media/posts/1/i_bien.png",
            "author": {
                "name": "Đinh Công Minh"
            },
            "tags": [
            ],
            "date_published": "2025-09-19T01:22:09+07:00",
            "date_modified": "2025-09-19T12:00:09+07:00"
        }
    ]
}
