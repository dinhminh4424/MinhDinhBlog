<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>DinhCongMinh</title>
    <link href="https://dinhminh4424.github.io/MinhDinhBlog/feed.xml" rel="self" />
    <link href="https://dinhminh4424.github.io/MinhDinhBlog" />
    <updated>2025-09-19T12:00:09+07:00</updated>
    <author>
        <name>Đinh Công Minh</name>
    </author>
    <id>https://dinhminh4424.github.io/MinhDinhBlog</id>

    <entry>
        <title>Biến</title>
        <author>
            <name>Đinh Công Minh</name>
        </author>
        <link href="https://dinhminh4424.github.io/MinhDinhBlog/bien.html"/>
        <id>https://dinhminh4424.github.io/MinhDinhBlog/bien.html</id>
        <media:content url="https://dinhminh4424.github.io/MinhDinhBlog/media/posts/1/i_bien.png" medium="image" />

        <updated>2025-09-19T01:22:09+07:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://dinhminh4424.github.io/MinhDinhBlog/media/posts/1/i_bien.png" alt="" />
                     Biến (variable) là nơi lưu trữ dữ liệu trong bộ nhớ để có thể sử dụng lại sau này. Vd: như hộp chứa giá trị số, chữ, mảng, đối tượng,… "use strict"; height = 180; // -&gt; Uncaught ReferenceError: height is not defined console.log(height); =&gt; giúp&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://dinhminh4424.github.io/MinhDinhBlog/media/posts/1/i_bien.png" class="type:primaryImage" alt="" /></p>
                <p><strong> </strong><strong>Biến (variable)</strong> là nơi lưu trữ dữ liệu trong bộ nhớ để có thể sử dụng lại sau này.</p>
<p>Vd: như hộp chứa giá trị số, chữ, mảng, đối tượng,…</p>
<ul>
<li>Đặt tên biến:
<ul>
<li>Khái quat:</li>
</ul>
</li>
<li>tên biến có thể bao gồm bất kỳ chuỗi ký tự nào (chữ thường và chữ hoa), và kí tự  _,  $.
<ul>
<li>vd: abc, Bcd, a_g, …</li>
</ul>
</li>
<li>Có phân biệt chữ hoa, thường
<ul>
<li>Vd : abc != Abc</li>
</ul>
</li>
<li>Không được bắt đầu bằng số
<ul>
<li>vd: 1ab, 9cd =&gt;  là sai</li>
</ul>
</li>
<li>Không được trùng từ khoá: if, else, for, class, …..</li>
<li>Khai báo:</li>
<li>Dùng 3 từ khoá: var, let, const</li>
<li>Đứng trước tên biến khi khai báo.</li>
<li>Vd:
<ul>
<li>let a ;</li>
<li>let b ;</li>
<li>const c = 10 ;</li>
</ul>
</li>
<li>Khởi tạo:</li>
<li>Gán toán tử `=` cho tên biến khi khai báo</li>
<li>Có thể gán cho 1 giá trị cụ thể, nội dung của 1 biến khác, 1 giá trị của 1 hàm</li>
<li>Vd:
<ul>
<li>let a = 10; // gán cụ thể</li>
<li>a = 20;</li>
<li>let c = a; // gán nd của biến khác</li>
<li>Let d = (a,c) =&gt; a+c; // gán giá trị của 1 hàm</li>
</ul>
</li>
<li>Khai báo và chế độ nghiêm ngặt <code>use strict</code></li>
<li>Nếu không khai báo mà tự động gán biến  =&gt; không sai nhưng không nên</li>
<li>Sử dụng <em><i><code>use strict;</code></i></em>; ở đầu đoạn mã</li>
</ul>
<table>
<tbody>
<tr>
<td width="710">
<p>"use  strict";</p>
<p>   </p>
<p>height  =  180;  //  -&gt;  Uncaught  ReferenceError:  height  is  not  defined</p>
<p>console.log(height);</p>
</td>
</tr>
</tbody>
</table>
<p> </p>
<p>=&gt; giúp thông dịch chuẩn js hiện đại (cái không đặt let, var, const của kiểu cũ )</p>
<p> </p>
<ul>
<li>Thay đổi giá trị biến</li>
</ul>
<p> </p>
<ul>
<li>Ví dụ 1:</li>
</ul>
<table style="width: 99.7151%; height: 359px;">
<tbody>
<tr style="height: 356.15px;">
<td style="width: 100%; height: 356.15px;" width="710">
<p>let a = 100; // biến a có giá trị 100 (ban đầu)</p>
<p>// thay đổi giá trị biến</p>
<p>a = 199; // giá trị biến đã thay đổi (lúc sau)</p>
</td>
</tr>
</tbody>
</table>
<ul>
<li>Trong js sẽ ko có kiểu xác định, khác với c,c++,c#, java (vd: int a = 10; =&gt; kiểu số nguyên hay float b = 9.9; =&gt; kiểu số thực, …. )</li>
<li>Ví dụ 2:</li>
</ul>
<table>
<tbody>
<tr>
<td width="710">
<p>let a = 10; // kiểu số</p>
<p>a = “Đinh Công Minh”; // kiểu chuỗi</p>
</td>
</tr>
</tbody>
</table>
<p> </p>
<p>=&gt; Trong js linh hoạt kiểu dữ liệu!</p>
<ul>
<li>Var, let</li>
<li>Let:</li>
<li>Biến đã khai báo rồi ko khai báo nữa</li>
<li>Phạm vi: Biến khai báo trong<em><i>cục bộ</i></em> sẽ chỉ có phạm vi hoạt động trong cục bộ không có đến <em><i>toàn cục</i></em></li>
</ul>
<p> </p>
<pre class="language-javascript"><code>let  height  =  180;

if(true){

         let  weight  =  70;

         console.log(height);  //  -&gt;  180

         console.log(weight);  //  -&gt;  70

}

console.log(height);  //  -&gt;  180

console.log(weight);  //  -&gt;  Uncaught  ReferenceError:  weight  is  not  defined</code></pre>
<pre class="language-javascript"><code>let a;

console.log(a); //  -&gt;  undefined

if (true) {

  let a = 1;

  console.log(a); //  -&gt;  1

}

a = a + 1;

console.log(a); //  -&gt;  undefined</code></pre>
<ul>
<li>Var;</li>
<li>Biến đã khai báo có thể khai báo lại</li>
</ul>
<table>
<tbody>
<tr>
<td width="710">
<p>Var a =10 ;</p>
<p>Var a =20;</p>
</td>
</tr>
</tbody>
</table>
<p> </p>
<ul>
<li>Phạm vi: Biến khai báo trong<em><i>cục bộ</i></em> không chỉ có phạm vi hoạt động trong cục bộ mà còn đến <em><i>toàn cục. </i></em>Cơ bản là:<u> biến cục bộ thay đổi =&gt; toàn cục cũng thay đổi</u></li>
</ul>
<table>
<tbody>
<tr>
<td width="710">
<p>var  height  =  180;</p>
<p>if(true){</p>
<p>         var  weight  =  70;</p>
<p>         console.log(height);  //  -&gt;  180</p>
<p>         console.log(weight);  //  -&gt;  70</p>
<p>}</p>
<p>console.log(height);  //  -&gt;  180</p>
<p>console.log(weight);  //  -&gt;  70</p>
</td>
</tr>
</tbody>
</table>
<p> </p>
<table>
<tbody>
<tr>
<td width="710">
<p> var a;</p>
<p>console.log(a); //  -&gt;  undefined</p>
<p>if (true) {</p>
<p>  let a = 1;</p>
<p>  console.log(a); //  -&gt;  1</p>
<p>}</p>
<p>a = a + 1;</p>
<p>console.log(a); //  -&gt;  undefined</p>
</td>
</tr>
</tbody>
</table>
<ul>
<li>
<ul>
<li>Hằng số:</li>
<li>Là giá trị khi khai báo rồi sẽ không chỉnh sửa được nữa</li>
</ul>
</li>
</ul>
<table>
<tbody>
<tr>
<td width="710">
<p>const  greeting  =  "Hello!";</p>
<p>greeting  =  "Hi!";  //  -&gt;  Uncaught  TypeError:  Assignment  to  constant  variable.</p>
</td>
</tr>
</tbody>
</table>
<p> </p>
<ul>
<li>Phải gán gt lúc khời tạo luôn, nếu ko sẽ lỗi</li>
</ul>
<table>
<tbody>
<tr>
<td width="710">
<p>const  greeting  =  "Hello!";</p>
<p> </p>
</td>
</tr>
<tr>
<td width="710">
<p>const  greeting;  //  -&gt;  Uncaught  SyntaxError:  Missing  initializer  in  const  declaration</p>
<p>greeting  =  "Hello!";</p>
</td>
</tr>
</tbody>
</table>
<p> </p>
<ul>
<li>Phạm Vi: giống như let khai báo trong cụ bộ chỉ sd trong cục bộ</li>
</ul>
<p> </p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
</feed>
